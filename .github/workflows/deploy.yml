name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, pi]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define paths
        id: paths
        run: |
          echo "PI_TARGET=/home/myk410/Pi-Patreon" >> $GITHUB_ENV
          echo "BACKUP_ROOT=/home/myk410/Pi-Patreon-backups" >> $GITHUB_ENV
          echo "STAMP=$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV

      # Optional: pre-deploy backup (keeps last 5 backups)
      - name: Pre-deploy backup (if target has content)
        run: |
          mkdir -p "$BACKUP_ROOT"
          if [ -d "$PI_TARGET" ] && [ "$(ls -A "$PI_TARGET" 2>/dev/null)" ]; then
            BACKUP_DIR="$BACKUP_ROOT/$STAMP"
            mkdir -p "$BACKUP_DIR"
            rsync -rlDz \
              --delete \
              --omit-dir-times \
              --no-o --no-g \
              "$PI_TARGET"/ "$BACKUP_DIR"/
            # rotate: keep last 5 backups
            ls -1dt "$BACKUP_ROOT"/* 2>/dev/null | tail -n +6 | xargs -r rm -rf
            echo "Backed up to: $BACKUP_DIR"
          else
            echo "No existing content to back up."
          fi

      - name: Sync to /home/myk410/Pi-Patreon
        run: |
          mkdir -p "$PI_TARGET"
          rsync -rlDz --delete \
            --omit-dir-times \
            --no-o --no-g \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude "node_modules/" \
            --exclude "__pycache__/" \
            --exclude "*.log" \
            ./ "$PI_TARGET/"

      # (Optional) post-deploy hook (install deps / build / migrate)
      - name: Post-deploy
        run: |
          cd "$PI_TARGET"
          echo "Post-deploy steps go here"
          # examples:
          # python3 -m venv venv && venv/bin/pip install -r requirements.txt
          # npm ci && npm run build

      # (Optional) restart your app's systemd service
      - name: Restart service
        run: |
          sudo systemctl daemon-reload || true
          sudo systemctl restart pi-patreon.service || true
          sudo systemctl --no-pager -l status pi-patreon.service | tail -n 50 || true
